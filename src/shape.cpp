/**
 * @file shape.cpp
 *
 * @brief File implementing the @link Shape class
 */

#include "shape.hpp"
#include <fstream>

Shape::Shape() { points = std::vector<Point>(); }

Shape::Shape(std::vector<Point> points, std::multimap<int, int> faces) {
  this->points = points;
  this->faces = faces;
}

bool Shape::exportToFile(std::string filePath) {
  std::ofstream file(filePath);
  file << "# File generated by CG Project" << std::endl;

  for (auto point : this->points) {
    file << "v " << std::get<0>(point) << " " << std::get<1>(point) << " "
         << std::get<2>(point) << std::endl;
  }
  int c = 0;
  for (auto it = this->faces.begin(); it != this->faces.end(); it++) {
    file << "g " << c << std::endl;
    c++;
    int key = (*it).first;
    auto keyRange = this->faces.equal_range(key);
    file << "f";
    for (; it != keyRange.second; ++it) {
      // Indices in .obj files start at 1, whilst our indices start at 0
      file << " " << (*it).second + 1;
    }
    --it;
    file << std::endl;
  }

  file.close();
  return true;
}
